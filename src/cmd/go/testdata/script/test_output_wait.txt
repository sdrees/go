# Wait for test output from sub-processes whether or not the package name is
# provided on the command-line.
go test -v
stdout 'PASS\s+WAIT\s+ok'
go test -v .
stdout 'PASS\s+WAIT\s+ok'

-- go.mod --
module x

-- x_test.go --
package x

import (
	"os"
	"os/exec"
	"testing"
)

func TestMain(m *testing.M) {
	if os.Getenv("WAIT") == "true" {
		os.Stdout.Write([]byte("WAIT\n"))
		return
	}
	m.Run()
}

func TestWait(t *testing.T) {
	cmd := exec.Command(os.Args[0])
	cmd.Env = []string{"WAIT=true"}
	cmd.Stdout = os.Stdout
	if err := cmd.Start(); err != nil {
		t.Fatal(err)
	}
}
